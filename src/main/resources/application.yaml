spring:
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/classicmodelsV2}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:defaultpassword}
    driver-class-name: ${DB_DRIVER:com.mysql.cj.jdbc.Driver}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
    database: ${DATABASE:mysql}
    database-platform: ${DATABASE_PLATFORM:org.hibernate.dialect.MySQLDialect}

  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}
      enabled: true
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}

  web:
    resources:
      static-locations: file:${file.storage.path}/
      cache:
        period: 3600

# File storage configuration
file:
  storage:
    path: ${FILE_STORAGE_PATH:./uploads}
    allowed-extensions: jpg,jpeg,png,gif,webp,bmp
    max-file-size: ${FILE_MAX_SIZE:5MB}

server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: image/jpeg,image/png,image/gif,image/webp,application/json,text/css,text/javascript
  error:
    include-message: always
    include-binding-errors: always

# CORS configuration for React frontend
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: "*"
  allow-credentials: true

logging:
  level:
    com.systech: ${LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${BINDING_LOG_LEVEL:WARN}
    org.springframework: ${SPRING_LOG_LEVEL:INFO}
    org.springframework.boot.autoconfigure: WARN
    org.springframework.web.multipart: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

file:
  storage:
    path: ./uploads-dev

logging:
  level:
    com.systech: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

file:
  storage:
    path: /var/app/uploads

logging:
  level:
    com.systech: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework: WARN
  file:
    name: /var/log/app/application.log

server:
  forward-headers-strategy: native